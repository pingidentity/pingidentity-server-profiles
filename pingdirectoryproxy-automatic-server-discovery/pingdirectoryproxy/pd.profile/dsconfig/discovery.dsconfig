# Create a health check to verify that the dc=example,dc=com entry can be
# retrieved in a timely manner.
dsconfig create-ldap-health-check \
    --check-name dc_example_dc_com-retrieve-base-entry \
    --type search \
    --set enabled:true \
    --set base-dn:dc=example,dc=com \
    --set allow-no-entries-returned:false \
    --set allow-multiple-entries-returned:false
 
# Create a health check to verify that replication is working without a
# significant backlog.
dsconfig create-ldap-health-check \
    --check-name dc_example_dc_com-replication-backlog \
    --type replication-backlog \
    --set enabled:true \
    --set base-dn:dc=example,dc=com
 
# Create an LDAP external server template with the above
dsconfig create-ldap-external-server-template \
    --template-name dc_example_dc_com \
    --set health-check:dc_example_dc_com-retrieve-base-entry \
    --set health-check:dc_example_dc_com-replication-backlog

# Create a fewest operations load-balancing algorithm instance that
# uses the default LDAP external server template for backend servers that it
# discovers from the topology registry.
dsconfig create-load-balancing-algorithm \
    --algorithm-name dc_example_dc_com-fewest-operations \
    --type fewest-operations \
    --set enabled:true \
    --set ldap-external-server-template:dc_example_dc_com
 
# Create a failover load-balancing algorithm instance that also uses the
# default LDAP external server template for backend servers that it
# discovers from the topology registry.
dsconfig create-load-balancing-algorithm \
    --algorithm-name dc_example_dc_com-failover \
    --type failover \
    --set enabled:true \
    --set ldap-external-server-template:dc_example_dc_com
 
# Create a criteria-based load-balancing algorithm instance that will use
# failover load-balancing for writes.
dsconfig create-criteria-based-load-balancing-algorithm \
    --algorithm-name failover-for-writes \
    --set load-balancing-algorithm:dc_example_dc_com-failover \
    --set "request-criteria:Write Requests"
 
# Create a proxying request processor instance that uses criteria-based load
# balancing to ensure that writes use a failover strategy, and the remaining
# read operations use a default fewest operations strategy.
dsconfig create-request-processor \
    --processor-name dc_example_dc_com \
    --type proxying \
    --set load-balancing-algorithm:dc_example_dc_com-fewest-operations \
    --set criteria-based-load-balancing-algorithm:failover-for-writes
 
# Create a subtree view to ensure that operations below "dc=example,dc=com"
# will use the above proxying request processor.
dsconfig create-subtree-view \
    --view-name dc_example_dc_com \
    --set "base-dn:dc=example,dc=com" \
    --set request-processor:dc_example_dc_com
 
# Update the default client connection policy to include the above subtree
# view.
dsconfig set-client-connection-policy-prop \
    --policy-name default \
    --add subtree-view:dc_example_dc_com

# This file was generated by the create-initial-proxy-config tool.
# This file contains an example entry-balancing configuration that uses two replication sets of PingDirectory servers.
# The servers replicate two base DNs: dc=example,dc=com and ou=people,dc=example,dc=com
# ou=people,dc=example,dc=com is a restricted DN that is split across the two replication sets
# To create your own proxy configuration for an entry balancing deployment, use create-initial-proxy.config.

#
# Status:Creating Health Checks
#

dsconfig create-ldap-health-check --check-name set1-pingdirectory-0.set1.${PD_HOSTNAME_SUFFIX}:1389_dc_example_dc_com-search-health-check --type search --set enabled:true --set base-dn:dc=example,dc=com
dsconfig create-ldap-health-check --check-name set1-pingdirectory-0.set1.${PD_HOSTNAME_SUFFIX}:1389_ou_people_dc_example_dc_com-search-health-check --type search --set enabled:true --set base-dn:ou=people,dc=example,dc=com
dsconfig create-ldap-health-check --check-name set1-pingdirectory-1.set1.${PD_HOSTNAME_SUFFIX}:1389_dc_example_dc_com-search-health-check --type search --set enabled:true --set base-dn:dc=example,dc=com
dsconfig create-ldap-health-check --check-name set1-pingdirectory-1.set1.${PD_HOSTNAME_SUFFIX}:1389_ou_people_dc_example_dc_com-search-health-check --type search --set enabled:true --set base-dn:ou=people,dc=example,dc=com
dsconfig create-ldap-health-check --check-name set1-pingdirectory-2.set1.${PD_HOSTNAME_SUFFIX}:1389_dc_example_dc_com-search-health-check --type search --set enabled:true --set base-dn:dc=example,dc=com
dsconfig create-ldap-health-check --check-name set1-pingdirectory-2.set1.${PD_HOSTNAME_SUFFIX}:1389_ou_people_dc_example_dc_com-search-health-check --type search --set enabled:true --set base-dn:ou=people,dc=example,dc=com
dsconfig create-ldap-health-check --check-name set2-pingdirectory-0.set2.${PD_HOSTNAME_SUFFIX}:1389_dc_example_dc_com-search-health-check --type search --set enabled:true --set base-dn:dc=example,dc=com
dsconfig create-ldap-health-check --check-name set2-pingdirectory-0.set2.${PD_HOSTNAME_SUFFIX}:1389_ou_people_dc_example_dc_com-search-health-check --type search --set enabled:true --set base-dn:ou=people,dc=example,dc=com
dsconfig create-ldap-health-check --check-name set2-pingdirectory-1.set2.${PD_HOSTNAME_SUFFIX}:1389_dc_example_dc_com-search-health-check --type search --set enabled:true --set base-dn:dc=example,dc=com
dsconfig create-ldap-health-check --check-name set2-pingdirectory-1.set2.${PD_HOSTNAME_SUFFIX}:1389_ou_people_dc_example_dc_com-search-health-check --type search --set enabled:true --set base-dn:ou=people,dc=example,dc=com
dsconfig create-ldap-health-check --check-name set2-pingdirectory-2.set2.${PD_HOSTNAME_SUFFIX}:1389_dc_example_dc_com-search-health-check --type search --set enabled:true --set base-dn:dc=example,dc=com
dsconfig create-ldap-health-check --check-name set2-pingdirectory-2.set2.${PD_HOSTNAME_SUFFIX}:1389_ou_people_dc_example_dc_com-search-health-check --type search --set enabled:true --set base-dn:ou=people,dc=example,dc=com



#
# Status:Creating External Servers
#

dsconfig create-external-server --server-name set1-pingdirectory-0.set1.${PD_HOSTNAME_SUFFIX}:1389 --type ping-identity-ds --set server-host-name:set1-pingdirectory-0.set1.${PD_HOSTNAME_SUFFIX} --set server-port:1389 --set location:Docker --set "bind-dn:cn=Proxy User,cn=Root DNs,cn=config" --set password<${ROOT_USER_PASSWORD_FILE} --set health-check:set1-pingdirectory-0.set1.${PD_HOSTNAME_SUFFIX}:1389_dc_example_dc_com-search-health-check --set health-check:set1-pingdirectory-0.set1.${PD_HOSTNAME_SUFFIX}:1389_ou_people_dc_example_dc_com-search-health-check

dsconfig create-external-server --server-name set1-pingdirectory-1.set1.${PD_HOSTNAME_SUFFIX}:1389 --type ping-identity-ds --set server-host-name:set1-pingdirectory-1.set1.${PD_HOSTNAME_SUFFIX} --set server-port:1389 --set location:Docker --set "bind-dn:cn=Proxy User,cn=Root DNs,cn=config" --set password<${ROOT_USER_PASSWORD_FILE} --set health-check:set1-pingdirectory-1.set1.${PD_HOSTNAME_SUFFIX}:1389_dc_example_dc_com-search-health-check --set health-check:set1-pingdirectory-1.set1.${PD_HOSTNAME_SUFFIX}:1389_ou_people_dc_example_dc_com-search-health-check

dsconfig create-external-server --server-name set1-pingdirectory-2.set1.${PD_HOSTNAME_SUFFIX}:1389 --type ping-identity-ds --set server-host-name:set1-pingdirectory-2.set1.${PD_HOSTNAME_SUFFIX} --set server-port:1389 --set location:Docker --set "bind-dn:cn=Proxy User,cn=Root DNs,cn=config" --set password<${ROOT_USER_PASSWORD_FILE} --set health-check:set1-pingdirectory-2.set1.${PD_HOSTNAME_SUFFIX}:1389_dc_example_dc_com-search-health-check --set health-check:set1-pingdirectory-2.set1.${PD_HOSTNAME_SUFFIX}:1389_ou_people_dc_example_dc_com-search-health-check

dsconfig create-external-server --server-name set2-pingdirectory-0.set2.${PD_HOSTNAME_SUFFIX}:1389 --type ping-identity-ds --set server-host-name:set2-pingdirectory-0.set2.${PD_HOSTNAME_SUFFIX} --set server-port:1389 --set location:Docker --set "bind-dn:cn=Proxy User,cn=Root DNs,cn=config" --set password<${ROOT_USER_PASSWORD_FILE} --set health-check:set2-pingdirectory-0.set2.${PD_HOSTNAME_SUFFIX}:1389_dc_example_dc_com-search-health-check --set health-check:set2-pingdirectory-0.set2.${PD_HOSTNAME_SUFFIX}:1389_ou_people_dc_example_dc_com-search-health-check

dsconfig create-external-server --server-name set2-pingdirectory-1.set2.${PD_HOSTNAME_SUFFIX}:1389 --type ping-identity-ds --set server-host-name:set2-pingdirectory-1.set2.${PD_HOSTNAME_SUFFIX} --set server-port:1389 --set location:Docker --set "bind-dn:cn=Proxy User,cn=Root DNs,cn=config" --set password<${ROOT_USER_PASSWORD_FILE} --set health-check:set2-pingdirectory-1.set2.${PD_HOSTNAME_SUFFIX}:1389_dc_example_dc_com-search-health-check --set health-check:set2-pingdirectory-1.set2.${PD_HOSTNAME_SUFFIX}:1389_ou_people_dc_example_dc_com-search-health-check

dsconfig create-external-server --server-name set2-pingdirectory-2.set2.${PD_HOSTNAME_SUFFIX}:1389 --type ping-identity-ds --set server-host-name:set2-pingdirectory-2.set2.${PD_HOSTNAME_SUFFIX} --set server-port:1389 --set location:Docker --set "bind-dn:cn=Proxy User,cn=Root DNs,cn=config" --set password<${ROOT_USER_PASSWORD_FILE} --set health-check:set2-pingdirectory-2.set2.${PD_HOSTNAME_SUFFIX}:1389_dc_example_dc_com-search-health-check --set health-check:set2-pingdirectory-2.set2.${PD_HOSTNAME_SUFFIX}:1389_ou_people_dc_example_dc_com-search-health-check




#
# Status:Creating Load-Balancing Algorithm for dc=example,dc=com
#

dsconfig create-load-balancing-algorithm --algorithm-name dc_example_dc_com-fewest-operations --type fewest-operations --set enabled:true --set backend-server:set1-pingdirectory-0.set1.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set1-pingdirectory-1.set1.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set1-pingdirectory-2.set1.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set2-pingdirectory-0.set2.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set2-pingdirectory-1.set2.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set2-pingdirectory-2.set2.${PD_HOSTNAME_SUFFIX}:1389
dsconfig create-load-balancing-algorithm --algorithm-name dc_example_dc_com-failover --type failover --set enabled:true --set backend-server:set1-pingdirectory-0.set1.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set1-pingdirectory-1.set1.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set1-pingdirectory-2.set1.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set2-pingdirectory-0.set2.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set2-pingdirectory-1.set2.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set2-pingdirectory-2.set2.${PD_HOSTNAME_SUFFIX}:1389
dsconfig create-criteria-based-load-balancing-algorithm --algorithm-name dc_example_dc_com-criteria-based-failover --set load-balancing-algorithm:dc_example_dc_com-failover --set "request-criteria:Write Requests"



#
# Status:Creating Request Processor for dc=example,dc=com
#

dsconfig create-request-processor --processor-name dc_example_dc_com-req-processor --type proxying --set criteria-based-load-balancing-algorithm:dc_example_dc_com-criteria-based-failover --set load-balancing-algorithm:dc_example_dc_com-fewest-operations



#
# Status:Creating Subtree View for dc=example,dc=com
#

dsconfig create-subtree-view --view-name dc_example_dc_com-view --set base-dn:dc=example,dc=com --set request-processor:dc_example_dc_com-req-processor



#
# Status:Updating Client Connection Policy for dc=example,dc=com
#

dsconfig set-client-connection-policy-prop --policy-name default --add subtree-view:dc_example_dc_com-view



#
# Status:Creating Load-Balancing Algorithm for ou=people,dc=example,dc=com; Server Set 1
#

dsconfig create-load-balancing-algorithm --algorithm-name ou_people_dc_example_dc_comServer_Set_1-fewest-operations --type fewest-operations --set enabled:true --set backend-server:set1-pingdirectory-0.set1.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set1-pingdirectory-1.set1.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set1-pingdirectory-2.set1.${PD_HOSTNAME_SUFFIX}:1389
dsconfig create-load-balancing-algorithm --algorithm-name ou_people_dc_example_dc_comServer_Set_1-failover --type failover --set enabled:true --set backend-server:set1-pingdirectory-0.set1.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set1-pingdirectory-1.set1.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set1-pingdirectory-2.set1.${PD_HOSTNAME_SUFFIX}:1389
dsconfig create-criteria-based-load-balancing-algorithm --algorithm-name ou_people_dc_example_dc_comServer_Set_1-criteria-based-failover --set load-balancing-algorithm:ou_people_dc_example_dc_comServer_Set_1-failover --set "request-criteria:Write Requests"



#
# Status:Creating Request Processor for ou=people,dc=example,dc=com; Server Set 1
#

dsconfig create-request-processor --processor-name ou_people_dc_example_dc_comServer_Set_1-req-processor --type proxying --set criteria-based-load-balancing-algorithm:ou_people_dc_example_dc_comServer_Set_1-criteria-based-failover --set load-balancing-algorithm:ou_people_dc_example_dc_comServer_Set_1-fewest-operations
#
# Status:Creating Load-Balancing Algorithm for ou=people,dc=example,dc=com; Server Set 2
#

dsconfig create-load-balancing-algorithm --algorithm-name ou_people_dc_example_dc_comServer_Set_2-fewest-operations --type fewest-operations --set enabled:true --set backend-server:set2-pingdirectory-0.set2.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set2-pingdirectory-1.set2.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set2-pingdirectory-2.set2.${PD_HOSTNAME_SUFFIX}:1389
dsconfig create-load-balancing-algorithm --algorithm-name ou_people_dc_example_dc_comServer_Set_2-failover --type failover --set enabled:true --set backend-server:set2-pingdirectory-0.set2.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set2-pingdirectory-1.set2.${PD_HOSTNAME_SUFFIX}:1389 --set backend-server:set2-pingdirectory-2.set2.${PD_HOSTNAME_SUFFIX}:1389
dsconfig create-criteria-based-load-balancing-algorithm --algorithm-name ou_people_dc_example_dc_comServer_Set_2-criteria-based-failover --set load-balancing-algorithm:ou_people_dc_example_dc_comServer_Set_2-failover --set "request-criteria:Write Requests"



#
# Status:Creating Request Processor for ou=people,dc=example,dc=com; Server Set 2
#

dsconfig create-request-processor --processor-name ou_people_dc_example_dc_comServer_Set_2-req-processor --type proxying --set criteria-based-load-balancing-algorithm:ou_people_dc_example_dc_comServer_Set_2-criteria-based-failover --set load-balancing-algorithm:ou_people_dc_example_dc_comServer_Set_2-fewest-operations



#
# Status:Creating Entry Balancing Request Processor for ou=people,dc=example,dc=com
#

dsconfig create-request-processor --processor-name ou_people_dc_example_dc_com-eb-req-processor --set entry-balancing-base-dn:ou=people,dc=example,dc=com --type entry-balancing --set broadcast-updates-above-balancing-point:false --set prime-rdn-index:false --set subordinate-request-processor:ou_people_dc_example_dc_comServer_Set_1-req-processor --set subordinate-request-processor:ou_people_dc_example_dc_comServer_Set_2-req-processor



#
# Status:Enabling RDN index priming on the Entry Balancing Request Processor for ou=people,dc=example,dc=com
#

dsconfig set-request-processor-prop --processor-name ou_people_dc_example_dc_com-eb-req-processor --set prime-rdn-index:true



#
# Status:Creating Placement Algorithm for ou=people,dc=example,dc=com
#

dsconfig create-placement-algorithm --type round-robin --set enabled:true --processor-name ou_people_dc_example_dc_com-eb-req-processor --algorithm-name round-robin



#
# Status:Creating Global Attribute Indexes for ou=people,dc=example,dc=com
#




#
# Status:Creating Subtree View for ou=people,dc=example,dc=com
#

dsconfig create-subtree-view --view-name ou_people_dc_example_dc_com-view --set base-dn:ou=people,dc=example,dc=com --set request-processor:ou_people_dc_example_dc_com-eb-req-processor



#
# Status:Updating Client Connection Policy for ou=people,dc=example,dc=com
#

dsconfig set-client-connection-policy-prop --policy-name default --add subtree-view:ou_people_dc_example_dc_com-view




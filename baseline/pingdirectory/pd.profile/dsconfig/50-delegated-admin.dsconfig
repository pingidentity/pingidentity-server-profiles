#
# Configure pf-connected-identities for DA configuration
#
dsconfig create-plugin \
  --plugin-name pf-connected-identities \
  --type composed-attribute --set enabled:true \
  --set attribute-type:objectClass \
  --set value-pattern:pf-connected-identities \
  --set target-attribute-exists-during-initial-population-behavior:merge-existing-and-composed-values \
  --set "include-base-dn:dc=example,dc=com" \
  --set "include-filter:(objectClass=inetOrgPerson)"

dsconfig create-plugin \
  --plugin-name pf-connected-identity \
  --type composed-attribute \
  --set enabled:true \
  --set attribute-type:pf-connected-identity \
  --set "value-pattern:auth-source=pf-local-identity:user-id={uid}" \
  --set "include-base-dn:dc=example,dc=com" \
  --set "include-filter:(objectClass=inetOrgPerson)"

#
# The search-base-dn value is the DN of a valid base entry where
# managed users are stored.
#
dsconfig create-rest-resource-type   \
    --type user \
    --type-name users \
    --set "display-name:Users" \
    --set enabled:true \
    --set "search-base-dn:ou=people,${USER_BASE_DN}" \
    --set primary-display-attribute-type:cn \
    --set resource-endpoint:users \
    --set "search-filter-pattern:(|(cn=*%%*)(mail=%%*)(uid=%%*)(sn=*%%*))" \
    --set structural-ldap-objectclass:inetOrgPerson \
    --set "parent-dn:ou=people,${USER_BASE_DN}" \
    --set create-rdn-attribute-type:uid

dsconfig create-rest-resource-type   \
    --type group \
    --type-name groups \
    --set "display-name:Groups" \
    --set enabled:true \
    --set "search-base-dn:ou=groups,${USER_BASE_DN}" \
    --set primary-display-attribute-type:cn \
    --set resource-endpoint:groups \
    --set "search-filter-pattern:(cn=*%%*)" \
    --set structural-ldap-objectclass:groupOfUniqueNames \
    --set "parent-dn:ou=groups,${USER_BASE_DN}"

#
# Specify the attributes that will be made available through the Delegated Admin API
#
dsconfig create-delegated-admin-attribute  --type-name users --attribute-type cn --set "display-name:Full Name" --set "display-order-index:0"
dsconfig create-delegated-admin-attribute  --type-name users --attribute-type givenName --set "display-name:First Name" --set "display-order-index:1"
dsconfig create-delegated-admin-attribute  --type-name users --attribute-type sn --set "display-name:Last Name" --set "display-order-index:2"
dsconfig create-delegated-admin-attribute  --type-name users --attribute-type mail --set "display-name:Email" --set "display-order-index:3"
dsconfig create-delegated-admin-attribute  --type-name users --attribute-type uid --set "display-name:User ID" --set "display-order-index:4"
dsconfig create-delegated-admin-attribute  --type-name users --attribute-type ds-pwp-account-disabled --set "display-name:Account Disabled"
dsconfig create-delegated-admin-attribute  --type-name groups --attribute-type cn --set "display-name:Group"
dsconfig create-delegated-admin-attribute  --type-name groups --attribute-type description --set "display-name:Description"

#
# Create Delegated Admin Rights
#
dsconfig create-delegated-admin-rights   \
    --rights-name deladmin \
    --set enabled:true \
    --set admin-user-dn:uid=administrator,ou=people,${USER_BASE_DN}

#
# Create Delegated Admin Resource User and Group Rights
#
# This will add/update aci's found on the User and Group resource trees, defined in rest resource
#
dsconfig create-delegated-admin-resource-rights  \
    --rights-name deladmin \
    --rest-resource-type users \
    --set admin-scope:all-resources-in-base \
    --set admin-permission:create \
    --set admin-permission:read \
    --set admin-permission:update \
    --set admin-permission:delete \
    --set admin-permission:manage-group-membership \
    --set enabled:true

dsconfig create-delegated-admin-resource-rights  \
    --rights-name deladmin \
    --rest-resource-type groups \
    --set admin-scope:all-resources-in-base \
    --set admin-permission:create \
    --set admin-permission:read \
    --set admin-permission:update \
    --set admin-permission:delete \
    --set admin-permission:manage-group-membership \
    --set enabled:true

#
# Create an access token validator for PingFederate tokens.
#
# WARNING: Use of the Blind Trust Trust Manager Provider is not recommended for production.  Instead, obtain PingFederate's
#          server certificate and add it to the JKS trust store using the 'manage-certificates trust-server-certificate'
#          command.  Then, update the PingFederateInstance external server to use the JKS Trust Manager Provider.
#          Consult the PingDirectory and PingData Security Guide for more information about configuring Trust Manager Providers.
#
dsconfig set-trust-manager-provider-prop   \
    --provider-name "Blind Trust" \
    --set enabled:true

dsconfig create-external-server   \
    --server-name pingfederate \
    --type "http" \
    --set "base-url:https://${PF_ENGINE_PRIVATE_HOSTNAME}:${PF_ENGINE_PRIVATE_PORT_HTTPS}" \
    --set "hostname-verification-method:allow-all" \
    --set "trust-manager-provider:Blind Trust"

dsconfig create-identity-mapper   \
    --mapper-name "entryUUIDMatch" \
    --type "exact-match" \
    --set enabled:true \
    --set "match-attribute:entryUUID" \
    --set "match-base-dn:${USER_BASE_DN}"

dsconfig create-access-token-validator   \
    --validator-name "pingfederate-validator" \
    --type "ping-federate" \
    --set enabled:true \
    --set "identity-mapper:entryUUIDMatch" \
    --set "subject-claim-name:Username" \
    --set "authorization-server:pingfederate" \
    --set "client-id:pingdirectory" \
    --set "client-secret:2FederateM0re"

#
# Complete the configuration of the Delegated Admin API.
#
dsconfig set-access-control-handler-prop  \
    --add 'global-aci:(extop="1.3.6.1.4.1.30221.2.6.17 || 1.3.6.1.4.1.30221.2.6.62")(version 3.0;acl "Authenticated access to the multi-update and generate-password extended requests for the Delegated Admin API"; allow (read) userdn="ldap:///all";)'

dsconfig set-access-control-handler-prop  \
    --add 'global-aci:(targetcontrol="1.3.6.1.4.1.4203.1.10.2 || 1.3.6.1.4.1.30221.2.5.40")(version 3.0;acl "Authenticated access to the no-op and password validation details request controls for the Delegated Admin API"; allow (read) userdn="ldap:///all";)'

dsconfig set-virtual-attribute-prop  \
    --name "Delegated Admin Privilege" \
    --set enabled:true

dsconfig set-http-servlet-extension-prop  \
    --extension-name "Delegated Admin" \
    --set access-token-scope:urn:pingidentity:directory-delegated-admin \
    --set "response-header:Cache-Control: no-cache, no-store, must-revalidate" \
    --set "response-header:Expires: 0" \
    --set "response-header:Pragma: no-cache"

#
# A CORS policy is not needed when the app is running in the Ping Directory Server or Ping Proxy Server.
# To prevent a potential security vulnerability in the CORS policy, cors-allowed-origins should instead be set to the
# public name of the host, proxy, or load balancer that is going to be presenting the delegated admin web application.
#
dsconfig create-http-servlet-cross-origin-policy  \
    --policy-name "Delegated Admin Cross-Origin Policy" \
    --set "cors-allowed-methods: GET" \
    --set "cors-allowed-methods: OPTIONS" \
    --set "cors-allowed-methods: POST" \
    --set "cors-allowed-methods: DELETE" \
    --set "cors-allowed-methods: PATCH" \
    --set "cors-allowed-origins: *"

dsconfig set-http-servlet-extension-prop  \
    --extension-name "Delegated Admin" \
    --set "cross-origin-policy:Delegated Admin Cross-Origin Policy"


#
# Create an email account status notification handler for user creation.
# This handler cannot be enabled until an SMTP server is available in the global configuration.
#
#dsconfig create-request-criteria \
#    --criteria-name "Delegated Admin User Creation Request Criteria" \
#    --type simple --set operation-type:add \
#    --set "included-target-entry-dn:ou=people,${USER_BASE_DN}" \
#    --set "any-included-target-entry-filter:(objectClass=inetOrgPerson)" \
#    --set "included-application-name:PingDirectory Delegated Admin"
#
#dsconfig create-account-status-notification-handler \
#    --handler-name "Delegated Admin Email Account Status Notification Handler" \
#    --type multi-part-email \
#    --set enabled:false \
#    --set "account-creation-notification-request-criteria:Delegated Admin User Creation Request Criteria" \
#    --set account-created-message-template:config/account-status-notification-email-templates/delegated-admin-account-created.template

#
# Enable the Delegated Admin HTTP Servelet
#
dsconfig set-connection-handler-prop \
    --handler-name "HTTPS Connection Handler" \
    --set enabled:false \
    --add "http-servlet-extension:Delegated Admin"

dsconfig set-connection-handler-prop \
    --handler-name "HTTPS Connection Handler" \
    --set enabled:true
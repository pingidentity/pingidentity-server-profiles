# Properties in this file (or passed in as system properties or environment variables) can be encrypted using the host key.
# The property "pingcentral.home" is available to be used in templates as "${pingcentral.home}" and is the path to the installed product.
# This property is optional.  The driver to be used will determined from the spring.datasource.url.
# If for some reason the driver cannot be determined automatically, it can be specified here.
spring.datasource.url=jdbc:mysql://pingcentral-db:3306/pingcentral?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useJvmCharsetConverters=true
spring.datasource.username=root
spring.datasource.password=2Federate
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
server.port=9022
# Indicate whether or not PingCentral is running behind a proxy or load balancer. When not utilizing SSO, the local
# user management account lockout mechanism needs to determine the client's source IP address. When set to false (default),
# PingCentral uses the request source IP address. When true, the Forwarded and X-Forwarded-For headers are accessed
# if present.
#pingcentral.proxied=false
# Uncomment and update the following block of properties to use a custom JKS trust store for SSL validation.
# To create a trust store for trusted authorities, please use the "keytool" utility included in the JDK.
# A basic trust store can be created using the following command,
#
#   <JAVA_HOME/bin/keytool -import -trustcacerts -alias <ALIAS> -file <PATH_TO_TRUSTED_AUTHORITY_CERT> -keystore <TRUST_STORE_FILE_NAME>.jks
#
# Except for the last two properties used to specify a custom trust store file, the following commented out properties
# indicate their default values. You need only define them to override the defaults.
#
# For development and testing. Setting this to true causes PingCentral to trust any certificate
server.ssl.trust-any=true
# Whether or not the HTTPS client performs server hostname validation
#server.ssl.https.verify-hostname=true
# When a trust store is configured below, by default certificate chain resolution is delegated to the system truststore
# upon failure. If this property is set to false, only the certificates in the configured trust store are used.
#server.ssl.delegate-to-system=true
# Java JKS keystore file containing the certificates to be trusted by PingCentral for outbound connections.
#server.ssl.trust-store=<PATH_TO_TRUSTSTORE_JKS_FILE>
# The password required to access the keystore file.
#server.ssl.trust-store-password=<TRUSTSTORE_PASSWORD>
#
# PingCentral SSO Configuration properties.
# The following are required properties when enabling OpenID Connect (OIDC).
#
# Enable OIDC based on the properties configured below. When commented out or defined with a value of false, OIDC
# and OAuth 2 Resource Server API access is not enabled and all other OIDC related properties are ignored.
#pingcentral.sso.oidc.enabled=false
# The issuer URI indicating the base of the OIDC Provider.
# By appending "/.well-known/openid-configuration", endpoint discovery is performed.
# This value is expected as the value of the "iss" claim present in the ID token.
#pingcentral.sso.oidc.issuer-uri=<ISSUER_URI>
# Configure the OAuth 2 client ID and secret to be utilized by PingCentral.
# The secret may be secured by utilizing bin/obfuscate.sh and placing that value here rather than the cleartext secret.
#pingcentral.sso.oidc.client-id=<CLIENT_ID>
#pingcentral.sso.oidc.client-secret=<CLIENT_SECRET>
#
# Optional OIDC properties. The default values are indicated below.
#
# The name of the claim which identifies the PingCentral role associated with the user.
#pingcentral.sso.oidc.role-claim-name=PingCentral-Role
# The expected value of the role claim which indicates the user is a PingCentral administrator.
#pingcentral.sso.oidc.role-claim-value-admin=IAM-Admin
# The expected value of the role claim which indicates the user is a PingCentral application owner (non-administrator).
#pingcentral.sso.oidc.role-claim-value-app-owner=Application-Owner
#
# OAuth2 resource server configuration for Admin API access.
#
# PingCentral supports only JWT access tokens verifiable via a JWKS endpoint. The JWKS endpoint derived from
# the OIDC well known metadata is used by default. If that is not appropriate, define the JWKS endpoint
# below to be used for verification of bearer tokens.
#pingcentral.sso.oidc.oauth-jwk-set-uri=<JWKS_ENDPOINT_URI>
# The name of the claim which identifies the username as determined by the Authorization Server
#pingcentral.sso.oidc.oauth-username-claim-name=Username
#TODO remove before checkin
logging.level.com.pingidentity=DEBUG


